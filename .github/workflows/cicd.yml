name: '‚ôªÔ∏è CI/CD'

on:
  pull_request:
    paths:
      - 'iac/state/**'
      - '.github/workflows/cicd.yml'
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: environment
        required: true
        default: dev

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.TF_STATE_AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.TF_STATE_AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.TF_STATE_AZURE_TENANT_ID }}
  ARM_USE_AZUREAD: true

defaults:
  run:
    working-directory: ./iac/solution


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    steps:
    - name: üì• checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: ü™Ñ Terraform setup
      uses: hashicorp/setup-terraform@v3

    - name: üî¨ Terraform fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: üé¨ Terraform Init
      run: terraform init -input=false -backend-config="resource_group_name=${{vars.TF_STATE_AZURE_RESOURCE_GROUP_NAME}}" -backend-config="storage_account_name=${{vars.TF_STATE_AZURE_STORAGE_ACCOUNT_NAME}}" -backend-config="container_name=${{vars.TF_STATE_AZURE_CONTAINER_NAME}}" -backend-config="environment=${{inputs.environment}}"

    - name: üìÉ Terraform Plan
      run: terraform plan -no-color -input=false
      continue-on-error: true
