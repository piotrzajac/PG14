name: '♻️ CI/CD'

on:
  pull_request:
    paths:
      - 'iac/state/**'
      - '.github/workflows/cicd.yml'
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: environment
        required: true
        default: dev

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.TF_STATE_AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.TF_STATE_AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.TF_STATE_AZURE_TENANT_ID }}
  ARM_USE_AZUREAD: true
  WORKING_DIR: ./iac/solution

defaults:
  run:
    working-directory: ${{ env.WORKING_DIR }}


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    steps:
    - name: 📥 checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🪄 Terraform setup
      uses: hashicorp/setup-terraform@v3

    - name: 🔬 Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    - name: 🔍 Scan with Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@v12
      with:
        framework: terraform

    - name: 🎬 Terraform Init
      id: init
      run: terraform init -input=false -backend-config="resource_group_name=${{vars.TF_STATE_AZURE_RESOURCE_GROUP_NAME}}" -backend-config="storage_account_name=${{vars.TF_STATE_AZURE_STORAGE_ACCOUNT_NAME}}" -backend-config="container_name=${{vars.TF_STATE_AZURE_CONTAINER_NAME}}"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: 📃 Terraform Plan
      id: plan
      continue-on-error: true
      run: |
        export exitcode=0
        terraform plan -no-color -input=false -var="environment=${{ inputs.environment }}" -out="solution.tfplan" || exitcode=$?

        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

        if [ $exitcode -eq 1 ]; then
          echo "Terraform plan failed"
          exit 1
        else
          echo "Terraform plan succeeded"
          exit 0
        fi

    - name: Publish Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: ${{ env.WORKING_DIR }}/solution.tfplan